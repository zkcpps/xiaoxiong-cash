{"version":3,"sources":["theme/index.tsx","components/Icon.tsx","components/Dividier.tsx","components/Tag.tsx","lib/category.ts","components/Category.tsx","lib/date.ts","components/EachRecord.tsx","components/DayRecord.tsx","components/MonthRecord.tsx","hooks/useRecordList.ts","components/Sticker.tsx","components/Drawer.tsx","components/Button.tsx","components/NumbePad.tsx","components/Money.tsx","components/CategoryFilter.tsx","components/MonthPanel.tsx","components/Menu.tsx","components/Layout.tsx","pages/Summary.tsx","components/RecordDetails.tsx","pages/Details.tsx","pages/Analysis/MonthFilterSection.tsx","components/ProgressBar.tsx","pages/Analysis/CategorySection.tsx","lib/chart.ts","pages/Analysis/DayAnalysis.tsx","pages/Analysis/MonthAnalysis.tsx","pages/Analysis/Analysis.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["theme","$white","$success","$danger","$warning","$linkText","$mainText","$normalText","$subText","$placeholder","$largeTextSize","$mainTextSize","$normalTextSize","$smallTextSize","StyledIcon","styled","svg","props","width","size","height","fill","color","Icon","name","attributes","className","aria-hidden","xlinkHref","defaultProps","VerticalDivider","span","borderRight","margin","gap","borderColor","HorizontalDivider","div","borderBottom","Divider","direction","StyledTag","Tag","children","CATEGORY_COLOR","none","background","expense","income","ALL_CATEGORIES","id","iconName","other","clothes","shopping","traffic","eat","travel","stock","living","salary","transfer","DEFAULT_INCOME_CATEGORIES","DEFAULT_EXPENSE_CATEGORIES","StyledCategory","Category","category","recordType","MONTH","StyledEachRecord","Link","EachRecord","record","date","amount","categoryId","note","type","find","c","time","dayjs","format","to","toFixed","StyledDayRecord","ul","Header","header","DateSection","section","AmountSection","DayRecord","dayRecord","day","expenseTotal","incomeTotal","recordList","style","marginRight","map","key","RecordList","li","MonthRecord","monthRecord","month","curtMonth","DEFAULT_RECORDS","appendRecord","prevRecordList","rawRecord","m","push","d","updateTotal","bulkAppendRecords","rawRecordList","JSON","parse","stringify","forEach","parseMonthRecord","useRecordList","useState","setRawRecordList","setRecordList","useEffect","fetchData","rawString","window","localStorage","getItem","addRawRecord","newRawRecordList","setItem","getMonthRecord","filterRecordList","filtered","filter","r","isSame","deleteRecord","editRecord","copy","index","some","i","slice","StyledSticker","Sticker","onClick","Shadow","Main","Drawer","title","closeDrawer","e","stopPropagation","BUTTON_COLOR","success","warning","BUTTON_SIZE","small","padding","fontSize","normal","StyledButton","button","display","alignItems","justifyContent","outline","borderRadius","border","Button","StyledNumberPad","value","NumberPad","onOK","onChange","text","target","textContent","length","onDel","newValue","prevValue","test","includes","isNaN","parseFloat","split","alert","updateAmount","TypeSection","CategoryList","CategoryItem","CategoryText","NoteSection","NumberPadSection","Money","onSubmit","Date","toISOString","getTime","toString","setNote","setType","setCategoryId","setAmount","amountString","setAmountString","categories","newNote","prompt","newRawRecord","BACKGROUND","StyledCategoryFilter","p","FilterSection","selected","CategoryFilter","submit","StyledMonthPanel","Year","MonthList","MonthItem","getPrevMonths","Array","_","subtract","MonthPanel","thisYear","prevYear","prevMonths","prevYearMonths","thisYearMonths","newMonth","get","StyledMenu","MenuItem","Menu","pathname","useLocation","StyledLayout","Layout","FilterWrapper","TypeButton","MonthButton","MonthFilterSection","Empty","Summary","showMonth","toggleMonth","showFilter","toggleFilter","showMoney","toggleMoney","setMonth","filterId","setFilterId","filterType","setFilterType","firstMonth","closeMoney","StyledRecordDetails","CategorySection","DetailsTable","table","DeleteButton","ActionSection","RecordDetails","onDelete","onEdit","marginLeft","confirm","Details","useHistory","goBack","useParams","Section","MonthFilter","ExpenseTitle","Expense","Income","StyledProgressBar","Text","Bar","Progress","progress","ProgressBar","ClassList","ClassItem","classified","total","ratio","Object","values","sort","a","b","classify","barChart","xData","yData","unit","tooltip","show","trigger","axisPointer","axis","textStyle","xAxis","axisLabel","formatter","data","yAxis","series","label","position","itemStyle","barMinHeight","DayAnalysis","xDayData","now","year","days","getDate","getDaysInMonth","yDayData","getYData","dayChartOptions","option","MonthAnalysis","months","monthChartOptions","StyledAnalysis","Analysis","selectedRecordList","StyledApp","App","innerHeight","setHeight","onResize","addEventListener","removeEventListener","exact","path","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6def413b.chunk.js","sourcesContent":["const theme = {\r\n  $white: '#edf5ed',\r\n  $success: '#4395ff',\r\n  $danger: '#F76361',\r\n  $warning: '#F0B739',\r\n  $linkText: '#576F96',\r\n  $mainText: '#303133',\r\n  $normalText: '#606266',\r\n  $subText: '#909399',\r\n  $placeholder: '#C0C4CC',\r\n\r\n  $largeTextSize: '18px',\r\n  $mainTextSize: '16px',\r\n  $normalTextSize: '14px',\r\n  $smallTextSize: '12px',\r\n}\r\n\r\nexport default theme\r\n","import * as React from 'react'\r\nimport {SVGAttributes} from 'react'\r\nimport styled from 'styled-components'\r\nimport theme from '../theme'\r\n\r\ntype TProps = SVGAttributes<SVGElement> & {\r\n  name: string\r\n  color?: string\r\n  size?: number\r\n}\r\n\r\ntype TStyledIcon = {\r\n  size: number\r\n}\r\n\r\nconst StyledIcon = styled.svg<TStyledIcon>(props => ({\r\n  width: props.size,\r\n  height: props.size,\r\n  fill: props.color\r\n}))\r\n\r\nconst Icon: React.FC<TProps> = (props) => {\r\n  const {name, color, size, ...attributes} = props\r\n\r\n  return (\r\n    <StyledIcon size={size!}\r\n                color={color}\r\n                className=\"icon\"\r\n                aria-hidden=\"true\"\r\n                {...attributes}>\r\n      <use xlinkHref={`#icon-${name}`}/>\r\n    </StyledIcon>\r\n  )\r\n}\r\n\r\nIcon.defaultProps = {\r\n  size: 16,\r\n  color: theme.$normalText\r\n}\r\n\r\nexport default Icon\r\n","import * as React from 'react'\r\nimport styled from 'styled-components'\r\n\r\ntype TDirection = 'vertical' | 'horizontal'\r\n\r\ntype TProps = {\r\n  direction?: TDirection\r\n  gap?: number\r\n  color?: string\r\n}\r\n\r\nconst VerticalDivider = styled.span<TProps>(props => ({\r\n  borderRight: '1px solid',\r\n  margin: `0 ${props.gap}px`,\r\n  borderColor: props.color\r\n}))\r\n\r\nconst HorizontalDivider = styled.div<TProps>(props => ({\r\n  borderBottom: '1px solid',\r\n  margin: `${props.gap}px 0`,\r\n  borderColor: props.color\r\n}))\r\n\r\nconst Divider: React.FC<TProps> = (props) => {\r\n  const {direction} = props\r\n\r\n  return (\r\n    direction === 'horizontal' ?\r\n      <HorizontalDivider {...props}/> :\r\n      <VerticalDivider {...props}/>\r\n  )\r\n}\r\n\r\nDivider.defaultProps = {\r\n  direction: 'vertical',\r\n  gap: 16,\r\n  color: '#eee'\r\n}\r\n\r\nexport default Divider\r\n","import * as React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledTag = styled.span`\r\n  width: 1.5em;\r\n  height: 1.5em;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 4px;\r\n  background: #F4F4F4;\r\n  color: ${props => props.theme.$subText};\r\n  font-size: ${props => props.theme.$smallTextSize} !important;\r\n  border-radius: 4px;\r\n`\r\n\r\nconst Tag: React.FC = (props) => {\r\n  return (\r\n    <StyledTag>{props.children}</StyledTag>\r\n  )\r\n}\r\n\r\nexport default Tag\r\n","import theme from '../theme'\r\n\r\nexport const CATEGORY_COLOR = {\r\n  none: {\r\n    background: '#ECECEC',\r\n    fill: '#C7C7C7'\r\n  },\r\n  expense: {\r\n    background: theme.$success,\r\n    fill: 'white'\r\n  },\r\n  income: {\r\n    background: theme.$warning,\r\n    fill: 'white'\r\n  }\r\n}\r\n\r\nexport const ALL_TYPE = '-1'\r\nexport const OTHER_TYPE = '0'\r\n\r\nexport const ALL_CATEGORIES = [\r\n  {\r\n    id: '0',\r\n    name: '其他',\r\n    iconName: 'rmb'\r\n  },\r\n  {\r\n    id: '1',\r\n    name: '衣服',\r\n    iconName: 'clothes'\r\n  },\r\n  {\r\n    id: '2',\r\n    name: '购物',\r\n    iconName: 'bag'\r\n  },\r\n  {\r\n    id: '3',\r\n    name: '交通',\r\n    iconName: 'bus'\r\n  },\r\n  {\r\n    id: '4',\r\n    name: '餐饮',\r\n    iconName: 'rice'\r\n  },\r\n  {\r\n    id: '5',\r\n    name: '旅行',\r\n    iconName: 'luggage'\r\n  },\r\n  {\r\n    id: '6',\r\n    name: '股票',\r\n    iconName: 'stock'\r\n  },\r\n  {\r\n    id: '7',\r\n    name: '水电媒',\r\n    iconName: 'water-drop'\r\n  },\r\n  {\r\n    id: '8',\r\n    name: '信用卡',\r\n    iconName: 'card'\r\n  },\r\n  {\r\n    id: '9',\r\n    name: '工资',\r\n    iconName: 'salary'\r\n  },\r\n  {\r\n    id: '10',\r\n    name: '转账',\r\n    iconName: 'transfer'\r\n  }\r\n]\r\n\r\nconst [\r\n  other, clothes, shopping,\r\n  traffic, eat, travel, stock,\r\n  living, salary, transfer\r\n] = ALL_CATEGORIES\r\n\r\nexport const DEFAULT_INCOME_CATEGORIES = [\r\n  salary, transfer, stock, other\r\n]\r\n\r\nexport const DEFAULT_EXPENSE_CATEGORIES = [\r\n  clothes, shopping, traffic, eat, travel, stock, living, transfer, other\r\n]\r\n\r\n","import * as React from 'react'\r\nimport styled from 'styled-components'\r\nimport Icon from './Icon'\r\nimport {TRecordType} from '../hooks/useRecordList'\r\nimport {CATEGORY_COLOR} from '../lib/category'\r\n\r\nexport type TCategory = {\r\n  id: string\r\n  name: string\r\n  iconName: string\r\n}\r\n\r\ntype TProps = {\r\n  category: TCategory\r\n  recordType: TRecordType | 'none'\r\n  size?: number\r\n}\r\n\r\ntype TStyledCategory = {\r\n  background: string\r\n  fill: string\r\n}\r\n\r\nconst StyledCategory = styled.span<TStyledCategory>`\r\n  padding: 8px;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: ${props => props.background};\r\n  border-radius: 50%;\r\n  svg {\r\n    fill: ${props => props.fill}\r\n  }\r\n`\r\n\r\nconst Category: React.FC<TProps> = (props) => {\r\n  const {category, recordType, size} = props\r\n\r\n  const color = CATEGORY_COLOR[recordType]\r\n\r\n  return (\r\n    <StyledCategory {...color}>\r\n      <Icon name={category.iconName} size={size}/>\r\n    </StyledCategory>\r\n  )\r\n}\r\n\r\nCategory.defaultProps = {\r\n  size: 24\r\n}\r\n\r\nexport default Category\r\n","import {Dayjs} from 'dayjs'\r\n\r\nexport const MONTH = 'YYYY年MM月'\r\nexport const DAY = 'MM月DD日'\r\nexport const TIME = 'hh:mm'\r\nexport const FULL_TIME = 'YYYY年MM月DD日 hh:mm'\r\n\r\nexport const getDaysInMonth = (now: Dayjs) => {\r\n  const year = now.get('year')\r\n  const month = now.get('month')\r\n\r\n  const days = new Date(year, month + 1, 0).getDate()\r\n\r\n  return [...Array(days)].map((_, i) => i + 1)\r\n}\r\n","import * as React from 'react'\r\nimport Category from './Category'\r\nimport Divider from './Dividier'\r\nimport {DEFAULT_EXPENSE_CATEGORIES} from '../lib/category'\r\nimport styled from 'styled-components'\r\nimport {TRawRecord} from '../hooks/useRecordList'\r\nimport dayjs from 'dayjs'\r\nimport {TIME} from '../lib/date'\r\nimport {Link} from 'react-router-dom'\r\n\r\ntype TProps = {\r\n  record: TRawRecord\r\n}\r\n\r\nconst StyledEachRecord = styled(Link)`\r\n  padding: 24px 18px;\r\n  display: flex;\r\n  color: ${props => props.theme.$normalText};\r\n  text-decoration: none;\r\n  .record-content {\r\n    flex-grow: 1;\r\n    padding: 0 16px;\r\n    &-details {\r\n      color: ${props => props.theme.$placeholder};\r\n      > span {\r\n        font-size: ${props => props.theme.$smallTextSize}\r\n      }\r\n    }\r\n    &-amount {\r\n      font-size: ${props => props.theme.$mainTextSize};\r\n    }\r\n  }\r\n`\r\n\r\nconst EachRecord: React.FC<TProps> = (props) => {\r\n  const {id, date, amount, categoryId, note, type} = props.record\r\n\r\n  const category = DEFAULT_EXPENSE_CATEGORIES.find(c => c.id === categoryId)\r\n  const time = dayjs(date).format(TIME)\r\n\r\n  return (\r\n    <li>\r\n      <StyledEachRecord to={`/record/${id}`}>\r\n        <Category category={category!} recordType={type}/>\r\n        <div className=\"record-content\">\r\n          <div>{category && category.name}</div>\r\n          <div className=\"record-content-details\">\r\n            <span>{time}</span>\r\n            <Divider gap={8}/>\r\n            <span>{note}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"record-content-amount\">\r\n          {type === 'income' ? '+' : '-'}\r\n          {amount.toFixed(2)}\r\n        </div>\r\n      </StyledEachRecord>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default EachRecord\r\n","import * as React from 'react'\r\nimport styled from 'styled-components'\r\nimport Tag from './Tag'\r\nimport EachRecord from './EachRecord'\r\nimport {TDayRecord} from '../hooks/useRecordList'\r\n\r\ntype TProps = {\r\n  dayRecord: TDayRecord\r\n}\r\n\r\nconst StyledDayRecord = styled.ul`\r\n  border-radius: 8px;\r\n  margin-bottom: 8px;\r\n  background: white;\r\n  color: ${props => props.theme.$mainText};\r\n  overflow: hidden;\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`\r\n\r\nconst Header = styled.header`\r\n  padding: 24px 18px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background: #FBFBFB;\r\n  span {\r\n    font-size: ${props => props.theme.$mainTextSize};\r\n  }\r\n`\r\n\r\nconst DateSection = styled.section``\r\n\r\nconst AmountSection = styled.section`\r\n  display: flex;\r\n  align-items: center;\r\n  color: ${props => props.theme.$normalText};\r\n  > span {\r\n    font-size: ${props => props.theme.$normalTextSize};\r\n  }\r\n`\r\n\r\nconst DayRecord: React.FC<TProps> = (props) => {\r\n  const {day, expenseTotal, incomeTotal, recordList} = props.dayRecord\r\n\r\n  return (\r\n    <StyledDayRecord>\r\n      <Header>\r\n        <DateSection>\r\n          <span style={{marginRight: 8}}>{day}</span>\r\n          <span>星期二</span>\r\n        </DateSection>\r\n        <AmountSection>\r\n          <Tag>支</Tag>\r\n          <span style={{marginRight: 16}}>\r\n            {expenseTotal.toFixed(2)}\r\n          </span>\r\n          <Tag>收</Tag>\r\n          <span>\r\n            {incomeTotal.toFixed(2)}\r\n          </span>\r\n        </AmountSection>\r\n      </Header>\r\n\r\n      <ul>\r\n        {\r\n          recordList && recordList.map(record => (\r\n            <EachRecord key={record.id} record={record}/>\r\n          ))\r\n        }\r\n      </ul>\r\n    </StyledDayRecord>\r\n  )\r\n}\r\n\r\nexport default DayRecord\r\n","import * as React from 'react'\r\nimport DayRecord from './DayRecord'\r\nimport {TMonthRecord} from '../hooks/useRecordList'\r\nimport styled from 'styled-components'\r\nimport Divider from './Dividier'\r\nimport dayjs from 'dayjs'\r\nimport {MONTH} from '../lib/date'\r\n\r\ntype TProps = {\r\n  monthRecord: TMonthRecord\r\n}\r\n\r\nconst Header = styled.div`\r\n  padding: 8px 18px;\r\n  span {\r\n    font-size: ${props => props.theme.$normalTextSize};\r\n    color: ${props => props.theme.$subText}\r\n  }\r\n`\r\n\r\nconst RecordList = styled.li``\r\n\r\nconst MonthRecord: React.FC<TProps> = (props) => {\r\n  const {month, recordList, incomeTotal, expenseTotal} = props.monthRecord\r\n\r\n  const curtMonth = dayjs().format(MONTH)\r\n\r\n  return (\r\n    <RecordList>\r\n      {\r\n        curtMonth !== month &&  // 只显示非当月的记录\r\n        <Header>\r\n          <span>{month}</span>\r\n          <Divider gap={8}/>\r\n          <span style={{marginRight: 12}}>\r\n            总支出￥{expenseTotal.toFixed(2)}\r\n          </span>\r\n          <span>\r\n            总收入￥{incomeTotal.toFixed(2)}\r\n          </span>\r\n        </Header>\r\n      }\r\n      <ul>\r\n        {\r\n          recordList && recordList.map(dayRecord => (\r\n            <DayRecord key={dayRecord.day} dayRecord={dayRecord}/>\r\n          ))\r\n        }\r\n      </ul>\r\n    </RecordList>\r\n  )\r\n}\r\n\r\nexport default MonthRecord\r\n","import dayjs, {Dayjs} from 'dayjs'\r\nimport {useEffect, useState} from 'react'\r\nimport {DAY, MONTH} from '../lib/date'\r\nimport {ALL_TYPE} from '../lib/category'\r\n\r\nexport type TRecordType = 'expense' | 'income'\r\nexport type TRawRecord = {\r\n  id: string\r\n  date: string\r\n  categoryId: string\r\n  amount: number\r\n  note: string\r\n  type: TRecordType\r\n}\r\nexport type TRecord = {\r\n  incomeTotal: number\r\n  expenseTotal: number\r\n}\r\nexport type TDayRecord = TRecord & {\r\n  day: string\r\n  recordList: TRawRecord[]\r\n}\r\nexport type TMonthRecord = TRecord & {\r\n  month: string\r\n  recordList: TDayRecord[]\r\n}\r\n\r\nexport const DEFAULT_RECORDS: TRawRecord[] = [\r\n  // {\r\n  //   id: '1',\r\n  //   date: dayjs('2020-04-04').toISOString(),\r\n  //   categoryId: '4',\r\n  //   amount: 300,\r\n  //   note: '吃黄焖鸡米饭',\r\n  //   type: 'expense'\r\n  // },\r\n  // {\r\n  //   id: '2',\r\n  //   date: dayjs('2020-03-04').toISOString(),\r\n  //   categoryId: '9',\r\n  //   amount: 400,\r\n  //   note: '工资',\r\n  //   type: 'income'\r\n  // },\r\n  // {\r\n  //   id: '3',\r\n  //   date: dayjs('2020-03-03').toISOString(),\r\n  //   categoryId: '1',\r\n  //   amount: 200,\r\n  //   note: '买衣服',\r\n  //   type: 'expense'\r\n  // },\r\n  // {\r\n  //   id: '4',\r\n  //   date: dayjs('2020-03-03').toISOString(),\r\n  //   categoryId: '5',\r\n  //   amount: 500,\r\n  //   note: '去巴哈马',\r\n  //   type: 'expense'\r\n  // }\r\n]\r\n\r\n// 追加单个 Record\r\nexport const appendRecord = (prevRecordList: TMonthRecord[], rawRecord: TRawRecord) => {\r\n  const month = dayjs(rawRecord.date).format(MONTH)\r\n  const day = dayjs(rawRecord.date).format(DAY)\r\n  // 找 month\r\n  let monthRecord = prevRecordList.find((m: TMonthRecord) => m.month === month)\r\n  if (!monthRecord) {\r\n    monthRecord = {month, incomeTotal: 0, expenseTotal: 0, recordList: []}\r\n    prevRecordList.push(monthRecord)\r\n  }\r\n\r\n  // 找 day\r\n  let dayRecord = monthRecord.recordList.find((d: TDayRecord) => d.day === day)\r\n  if (!dayRecord) {\r\n    dayRecord = {day, incomeTotal: 0, expenseTotal: 0, recordList: []}\r\n    monthRecord.recordList.push(dayRecord)\r\n  }\r\n\r\n  // 插入值\r\n  dayRecord.recordList.push(rawRecord)\r\n\r\n  // 更新 total\r\n  updateTotal(monthRecord, dayRecord, rawRecord)\r\n}\r\n\r\nconst updateTotal = (monthRecord: TMonthRecord, dayRecord: TDayRecord, rawRecord: TRawRecord) => {\r\n  const {amount, type} = rawRecord\r\n\r\n  if (type === 'expense') {\r\n    dayRecord.expenseTotal += amount\r\n    monthRecord.expenseTotal += amount\r\n  } else {\r\n    dayRecord.incomeTotal += amount\r\n    monthRecord.incomeTotal += amount\r\n  }\r\n}\r\n\r\n// 批量追加多个 Record\r\nexport const bulkAppendRecords = (prevRecordList: TMonthRecord[], rawRecordList: TRawRecord[]) => {\r\n  let recordList: TMonthRecord[] = JSON.parse(JSON.stringify(prevRecordList))\r\n\r\n  rawRecordList.forEach((rawRecord: TRawRecord) => {\r\n    appendRecord(recordList, rawRecord)\r\n  })\r\n\r\n  return recordList\r\n}\r\n\r\nexport const parseMonthRecord = (monthRecord: TMonthRecord) => {\r\n  let rawRecordList: TRawRecord[] = []\r\n  monthRecord.recordList.forEach(m =>\r\n    m.recordList.forEach((d =>\r\n      rawRecordList.push(d))\r\n    )\r\n  )\r\n  return rawRecordList\r\n}\r\n\r\nconst useRecordList = () => {\r\n  const ITEM_NAME = 'rawRecordList'\r\n\r\n  const [rawRecordList, setRawRecordList] = useState<TRawRecord[]>([])\r\n  const [recordList, setRecordList] = useState<TMonthRecord[]>([])\r\n\r\n  // 获取 raw record list\r\n  useEffect(() => fetchData(), [])\r\n\r\n  const fetchData = () => {\r\n    const rawString = window.localStorage.getItem(ITEM_NAME)\r\n\r\n    const rawRecordList = !rawString ? DEFAULT_RECORDS : JSON.parse(rawString)\r\n\r\n    setRawRecordList(rawRecordList)\r\n    setRecordList(bulkAppendRecords([], rawRecordList))\r\n  }\r\n\r\n  const getMonthRecord = (month: string) => { // '2020年4月'\r\n    return recordList.find(m => m.month === month)\r\n  }\r\n\r\n  const addRawRecord = (rawRecord: TRawRecord) => {\r\n    const newRawRecordList = [rawRecord, ...rawRecordList]\r\n\r\n    window.localStorage.setItem(ITEM_NAME, JSON.stringify(newRawRecordList))\r\n\r\n    setRawRecordList(newRawRecordList)\r\n    setRecordList(bulkAppendRecords([], newRawRecordList))\r\n  }\r\n\r\n  const filterRecordList = (categoryId: string, month: Dayjs, type: TRecordType) => {\r\n    const filtered = rawRecordList.filter(r => {\r\n      if (categoryId === ALL_TYPE) return true // 所有类型\r\n      return r.type === type && r.categoryId === categoryId // 对应类型和种类\r\n    }).filter(r => {\r\n      if (month.isSame(dayjs(), 'month')) return true // 当月\r\n      return dayjs(r.date).isSame(month, 'month') // 对应月份\r\n    })\r\n\r\n    return bulkAppendRecords([], filtered)\r\n  }\r\n\r\n  const deleteRecord = (id: string) => {\r\n    const newRawRecordList = rawRecordList.filter(r => r.id !== id)\r\n\r\n    // 保存\r\n    window.localStorage.setItem(ITEM_NAME, JSON.stringify(newRawRecordList))\r\n\r\n    setRawRecordList(newRawRecordList)\r\n    setRecordList(bulkAppendRecords([], newRawRecordList))\r\n  }\r\n\r\n  const editRecord = (rawRecord: TRawRecord) => {\r\n    const copy: TRawRecord[] = JSON.parse(JSON.stringify(rawRecordList))\r\n    let index = -1\r\n\r\n    // 找到该 record\r\n    copy.some((r, i) => {\r\n      if (r.id === rawRecord.id) {\r\n        index = i\r\n        return true\r\n      }\r\n      return false\r\n    })\r\n\r\n    const newRawRecordList = [\r\n      ...copy.slice(0, index),\r\n      {...rawRecord},\r\n      ...copy.slice(index + 1)\r\n    ]\r\n\r\n    // 保存\r\n    window.localStorage.setItem(ITEM_NAME, JSON.stringify(newRawRecordList))\r\n\r\n    setRawRecordList(newRawRecordList)\r\n    setRecordList(bulkAppendRecords([], newRawRecordList))\r\n  }\r\n\r\n  return {\r\n    rawRecordList,\r\n    setRawRecordList,\r\n    recordList,\r\n    appendRecord,\r\n    bulkAppendRecords,\r\n    addRawRecord,\r\n    getMonthRecord,\r\n    fetchData,\r\n    filterRecordList,\r\n    deleteRecord,\r\n    editRecord\r\n  }\r\n}\r\n\r\nexport default useRecordList\r\n","import * as React from 'react'\r\nimport {AllHTMLAttributes} from 'react'\r\nimport styled from 'styled-components'\r\n\r\ntype TProps = AllHTMLAttributes<HTMLDivElement> & {}\r\n\r\nconst StyledSticker = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: absolute;\r\n  bottom: 128px;\r\n  right: 32px;\r\n  width: 50px;\r\n  height: 50px;\r\n  background: white;\r\n  box-shadow: 0 2px 24px -6px ${props => props.theme.$normalText};\r\n  z-index: 3;\r\n  border-radius: 50%;\r\n`\r\n\r\nconst Sticker: React.FC<TProps> = (props) => {\r\n  const {onClick} = props\r\n\r\n  return (\r\n    <StyledSticker onClick={onClick}>\r\n      {props.children}\r\n    </StyledSticker>\r\n  )\r\n}\r\n\r\nexport default Sticker\r\n","import * as React from 'react'\r\nimport styled from 'styled-components'\r\nimport Icon from './Icon'\r\n\r\ntype TProps = {\r\n  closeDrawer: () => void\r\n  title?: string\r\n}\r\n\r\nconst Shadow = styled.div`\r\n  position: absolute;\r\n  height: 100%;\r\n  width: 100%;\r\n  bottom: 0;\r\n  z-index: 4;\r\n  background: rgba(0, 0, 0, 0.5);\r\n`\r\n\r\nconst Header = styled.header`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 16px;\r\n  border-bottom: 1px solid #eee;\r\n  font-size: ${props => props.theme.$largeTextSize};\r\n  background:  #FAFAFA;\r\n`\r\n\r\nconst Main = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  bottom: 0;\r\n  z-index: 5;\r\n  border-radius: 8px 8px 0 0;\r\n  background: white;\r\n  overflow: hidden;\r\n`\r\n\r\nconst Drawer: React.FC<TProps> = (props) => {\r\n  const {title, closeDrawer} = props\r\n\r\n  return (\r\n    <Shadow onClick={closeDrawer}>\r\n      <Main onClick={e => e.stopPropagation()}>\r\n        <Header>\r\n          <Icon onClick={closeDrawer} name=\"close\" size={18}/>\r\n          <span>{title}</span>\r\n          <Icon name=\"close\" color=\"transparent\"/>\r\n        </Header>\r\n\r\n        {props.children}\r\n      </Main>\r\n    </Shadow>\r\n  )\r\n}\r\n\r\nDrawer.defaultProps = {\r\n  title: ''\r\n}\r\n\r\nexport default Drawer\r\n","import * as React from 'react'\r\nimport styled from 'styled-components'\r\nimport theme from '../theme'\r\n\r\ntype TProps = React.ButtonHTMLAttributes<HTMLButtonElement> & {\r\n  recordType?: 'success' | 'warning' | 'none'\r\n  size?: 'small' | 'normal'\r\n}\r\n\r\ntype TStyledButton = {\r\n  recordType: 'success' | 'warning' | 'none',\r\n  size: 'small' | 'normal'\r\n}\r\n\r\nconst BUTTON_COLOR = {\r\n  success: {\r\n    background: theme.$success,\r\n    borderColor: theme.$success,\r\n    color: 'white'\r\n  },\r\n  warning: {\r\n    background: theme.$warning,\r\n    borderColor: theme.$warning,\r\n    color: 'white'\r\n  },\r\n  none: {\r\n    background: '#F1F1F1',\r\n    borderColor: '#F1F1F1',\r\n    color: theme.$subText\r\n  }\r\n}\r\n\r\nconst BUTTON_SIZE = {\r\n  small: {\r\n    padding: '2px 8px',\r\n    fontSize: theme.$smallTextSize\r\n  },\r\n  normal: {\r\n    padding: '4px 12px'\r\n  }\r\n}\r\n\r\nconst StyledButton = styled.button<TStyledButton>(props => {\r\n  return {\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: '4px 12px',\r\n    outline: 'none',\r\n    borderRadius: '16px',\r\n    marginRight: '8px',\r\n    border: '1px solid',\r\n    ...BUTTON_COLOR[props.recordType],\r\n    ...BUTTON_SIZE[props.size]\r\n  }\r\n})\r\n\r\nconst Button: React.FC<TProps> = (props) => {\r\n  const {recordType, size, ...attributes} = props\r\n\r\n  return (\r\n    <StyledButton {...attributes} recordType={recordType!} size={size!}>\r\n      {props.children}\r\n    </StyledButton>\r\n  )\r\n}\r\n\r\nButton.defaultProps = {\r\n  recordType: 'none',\r\n  size: 'normal'\r\n}\r\n\r\nexport default Button\r\n","import * as React from 'react'\r\nimport styled from 'styled-components'\r\nimport {TRecordType} from '../hooks/useRecordList'\r\n\r\ntype TProps = {\r\n  value: string\r\n  recordType: TRecordType\r\n  onChange: (newValue: string) => void\r\n  onOK: () => void\r\n}\r\n\r\ntype TStyledNumberPad = {\r\n  recordType: TRecordType\r\n  value: string\r\n}\r\n\r\nconst StyledNumberPad = styled.div<TStyledNumberPad>`\r\n  > button {\r\n    float: left;\r\n    width: 25%;\r\n    height: 64px;\r\n    background: white;\r\n    font-size: 1.3em;\r\n    outline: none;\r\n    border-radius: 4px;\r\n    border: 4px solid #FAFAFA;\r\n    &.zero {\r\n      width: 50%;\r\n    }\r\n    &.OK {\r\n      height: 192px;\r\n      float: right;\r\n      font-size: 1em;\r\n      color: white;\r\n      opacity: ${props => props.value === '0' ? 0.6 : 1};\r\n      background: ${({recordType, theme}) => recordType === 'expense' ? theme.$success : theme.$warning};\r\n    }\r\n  }\r\n`\r\n\r\nconst updateAmount = (prevValue: string, text: string) => {\r\n  const MAX_AMOUNT = 100000\r\n  const MAX_DECIMAL_LENGTH = 2\r\n\r\n  // 非法情况\r\n  if (!/[\\d.]/.test(text)) return prevValue\r\n\r\n  if (prevValue.includes('.')) {\r\n    // 如果 text 是 .\r\n    if (text === '.') return prevValue\r\n\r\n    // 如果是数字\r\n    if (!isNaN(parseFloat(text))) {\r\n      // 判断是否超出\r\n      const decimal = prevValue.split('.')[1]\r\n\r\n      return decimal.length >= MAX_DECIMAL_LENGTH ? prevValue : prevValue + text\r\n    }\r\n\r\n    return prevValue\r\n  }\r\n\r\n  if (prevValue === '0') {\r\n    return text === '.' ? prevValue + text : text\r\n  }\r\n\r\n  const newValue = prevValue + text\r\n\r\n  if (parseFloat(newValue) > MAX_AMOUNT) {\r\n    alert(`输入金额不能超过${MAX_AMOUNT}`)\r\n    return prevValue\r\n  }\r\n\r\n  return newValue\r\n}\r\n\r\nconst NumberPad: React.FC<TProps> = (props) => {\r\n  const {value, onOK, onChange, recordType} = props\r\n\r\n  const onDel = () => {\r\n    if (value === '0') return\r\n\r\n    if (value.length === 1) return onChange('0')\r\n\r\n    onChange(value.slice(0, -1))\r\n  }\r\n\r\n  const onClickPad = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    const text = (e.target as HTMLButtonElement).textContent\r\n    // null\r\n    if (!text) return\r\n\r\n    // OK\r\n    if (text === '确定') return onOK()\r\n\r\n    // Del\r\n    if (text === 'DEL') return onDel()\r\n\r\n    // 其他\r\n    const newValue = updateAmount(value, text)\r\n    onChange(newValue)\r\n  }\r\n\r\n  return (\r\n    <StyledNumberPad recordType={recordType}\r\n                     value={value}\r\n                     className=\"clearfix\"\r\n                     onClick={onClickPad}>\r\n      <button>1</button>\r\n      <button>2</button>\r\n      <button>3</button>\r\n      <button>DEL</button>\r\n\r\n      <button>4</button>\r\n      <button>5</button>\r\n      <button>6</button>\r\n      <button className=\"OK\">确定</button>\r\n\r\n      <button>7</button>\r\n      <button>8</button>\r\n      <button>9</button>\r\n\r\n      <button className=\"zero\">0</button>\r\n      <button>.</button>\r\n    </StyledNumberPad>\r\n  )\r\n}\r\n\r\nexport default NumberPad\r\n","import * as React from 'react'\r\nimport {useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport Category from './Category'\r\nimport {DEFAULT_EXPENSE_CATEGORIES, DEFAULT_INCOME_CATEGORIES} from '../lib/category'\r\nimport {TRawRecord, TRecordType} from '../hooks/useRecordList'\r\nimport Button from './Button'\r\nimport NumberPad from './NumbePad'\r\n\r\ntype TProps = {\r\n  value?: TRawRecord\r\n  closeDrawer: () => void\r\n  onSubmit: (newRawRecord: TRawRecord) => void\r\n}\r\n\r\nconst TypeSection = styled.section`\r\n  padding: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst AmountSection = styled.section`\r\n  display: flex;\r\n  width: 90%;\r\n  margin: 0 auto;\r\n  border-bottom: 1px solid #eee;\r\n  > span {\r\n    font-size: 2.5em;\r\n  }\r\n  > div {\r\n    padding-left: 8px;\r\n    flex-grow: 1;\r\n    border: none;\r\n    outline: none;\r\n    height: 64px;\r\n    font-size: 2em;\r\n    line-height: 2em;\r\n    text-align: right;\r\n  }\r\n`\r\n\r\nconst CategoryList = styled.ul`\r\n  padding: 24px;\r\n  display: flex;\r\n  align-items: center;\r\n  overflow-x: auto;\r\n  list-style: none;\r\n  &::-webkit-scrollbar {\r\n    width: 0\r\n  }\r\n`\r\n\r\nconst CategoryItem = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-right: 16px;\r\n  &:last-child {\r\n    margin-right: 0;\r\n  }\r\n`\r\n\r\nconst CategoryText = styled.span`\r\n  font-size: .8em;\r\n  margin-top: 8px;\r\n  color: ${props => props.theme.$subText};\r\n  word-break: keep-all;\r\n`\r\n\r\nconst NoteSection = styled.section`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 24px 24px;\r\n  > span {\r\n    margin-right: 8px;\r\n    color: ${props => props.theme.$linkText};\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst NumberPadSection = styled.section`\r\n  padding: 4px;\r\n  background: #FAFAFA;\r\n`\r\n\r\nconst Money: React.FC<TProps> = (props) => {\r\n  const {closeDrawer, onSubmit, value} = props\r\n\r\n  const rawRecord: TRawRecord = value ? value : {\r\n    date: new Date().toISOString(),\r\n    id: new Date().getTime().toString(),\r\n    amount: 0,\r\n    categoryId: '1',\r\n    note: '',\r\n    type: 'expense'\r\n  }\r\n\r\n  const [note, setNote] = useState(rawRecord.note)\r\n  const [type, setType] = useState<TRecordType>(rawRecord.type)\r\n  const [categoryId, setCategoryId] = useState(rawRecord.categoryId)\r\n  const [amount, setAmount] = useState(rawRecord.amount)\r\n  const [amountString, setAmountString] = useState(rawRecord.amount.toString())\r\n\r\n  const categories = type === 'expense' ? DEFAULT_EXPENSE_CATEGORIES : DEFAULT_INCOME_CATEGORIES\r\n\r\n  const onChangeAmount = (newValue: string) => {\r\n    setAmountString(newValue)\r\n    setAmount(parseFloat(newValue))\r\n  }\r\n\r\n  const addNote = () => {\r\n    const MAX_NOTE_LENGTH = 20\r\n\r\n    const newNote = prompt('添加备注', '') || ''\r\n\r\n    if (newNote.length > MAX_NOTE_LENGTH) return alert(`不能超过${MAX_NOTE_LENGTH}个字`)\r\n\r\n    setNote(newNote)\r\n  }\r\n\r\n  const onOK = () => {\r\n    if (amount === 0) return alert('金额不能为0')\r\n\r\n    const newRawRecord = {\r\n      ...rawRecord,\r\n      amount,\r\n      categoryId,\r\n      note,\r\n      type\r\n    }\r\n\r\n    onSubmit(newRawRecord)\r\n\r\n    closeDrawer()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <TypeSection>\r\n        <Button recordType={type === 'expense' ? 'success' : 'none'}\r\n                onClick={() => setType('expense')}>\r\n          支出\r\n        </Button>\r\n        <Button recordType={type === 'income' ? 'warning' : 'none'}\r\n                onClick={() => setType('income')}>\r\n          收入\r\n        </Button>\r\n      </TypeSection>\r\n      <AmountSection>\r\n        <span>￥</span>\r\n        <div>{amountString}</div>\r\n      </AmountSection>\r\n      <CategoryList>\r\n        {\r\n          categories.map((category => (\r\n            <CategoryItem key={category.id}\r\n                          onClick={() => setCategoryId(category.id)}>\r\n              <Category category={category}\r\n                        recordType={categoryId === category.id ? type : 'none'}\r\n                        size={20}/>\r\n              <CategoryText>{category.name}</CategoryText>\r\n            </CategoryItem>\r\n          )))\r\n        }\r\n      </CategoryList>\r\n      <NoteSection>\r\n        <span onClick={addNote}>{note ? '修改' : '添加备注'}</span>\r\n        <article>{note}</article>\r\n      </NoteSection>\r\n      <NumberPadSection>\r\n        <NumberPad value={amountString}\r\n                   recordType={type}\r\n                   onChange={onChangeAmount}\r\n                   onOK={onOK}/>\r\n      </NumberPadSection>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Money\r\n","import * as React from 'react'\r\nimport styled from 'styled-components'\r\nimport {ALL_TYPE, DEFAULT_EXPENSE_CATEGORIES, DEFAULT_INCOME_CATEGORIES} from '../lib/category'\r\nimport {TRecordType} from '../hooks/useRecordList'\r\nimport theme from '../theme'\r\n\r\ntype TProps = {\r\n  recordType: TRecordType\r\n  value: string\r\n  closeDrawer: () => void\r\n  onSubmit: (id: string, type: TRecordType) => void\r\n}\r\n\r\ntype TCategoryItem = {\r\n  recordType: TRecordType\r\n  selected: boolean\r\n}\r\n\r\nconst BACKGROUND = {\r\n  expense: theme.$success,\r\n  income: theme.$warning\r\n}\r\n\r\nconst StyledCategoryFilter = styled.section`\r\n  max-height: 48vh;\r\n  padding: 32px 16px;\r\n  background:  #FAFAFA;\r\n  overflow-y: auto;\r\n  .selected {\r\n    background: ${props => props.theme.$success};\r\n    color: white;\r\n  }\r\n`\r\n\r\nconst Tag = styled.p`\r\n  margin: 8px 0 8px 4px;\r\n  color: ${props => props.theme.$subText};\r\n`\r\n\r\nconst FilterSection = styled.section`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`\r\n\r\nconst CategoryItem = styled.div<TCategoryItem>`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 33.33333%;\r\n  padding: 16px;\r\n  border: 4px solid #FAFAFA;\r\n  border-radius: 6px;\r\n  font-size: 1.1em;\r\n  cursor: pointer;\r\n  background: ${props => props.selected ? BACKGROUND[props.recordType] : 'white'};\r\n  color: ${props => props.selected ? 'white' : props.theme.$normalText}\r\n`\r\n\r\nconst CategoryFilter: React.FC<TProps> = (props) => {\r\n  const {value, recordType, closeDrawer, onSubmit} = props\r\n\r\n  const submit = (id: string, type: TRecordType) => {\r\n    onSubmit(id, type)\r\n    closeDrawer()\r\n  }\r\n\r\n  return (\r\n    <StyledCategoryFilter>\r\n      <CategoryItem selected={value === ALL_TYPE}\r\n                    recordType=\"expense\"\r\n                    onClick={() => submit(ALL_TYPE, 'expense')}>\r\n        全部类型\r\n      </CategoryItem>\r\n\r\n      <Tag>支出</Tag>\r\n      <FilterSection>\r\n        {\r\n          DEFAULT_EXPENSE_CATEGORIES.map(c => (\r\n            <CategoryItem key={c.id}\r\n                          recordType=\"expense\"\r\n                          onClick={() => submit(c.id, 'expense')}\r\n                          selected={recordType === 'expense' && value === c.id}>\r\n              {c.name}\r\n            </CategoryItem>\r\n          ))\r\n        }\r\n      </FilterSection>\r\n\r\n      <Tag>收入</Tag>\r\n      <FilterSection>\r\n        {\r\n          DEFAULT_INCOME_CATEGORIES.map(c => (\r\n            <CategoryItem key={c.id}\r\n                          recordType=\"income\"\r\n                          onClick={() => submit(c.id, 'income')}\r\n                          selected={recordType === 'income' && value === c.id}>\r\n              {c.name}\r\n            </CategoryItem>\r\n          ))\r\n        }\r\n      </FilterSection>\r\n    </StyledCategoryFilter>\r\n  )\r\n}\r\n\r\nexport default CategoryFilter\r\n","import * as React from 'react'\r\nimport styled from 'styled-components'\r\nimport dayjs, {Dayjs} from 'dayjs'\r\n\r\ntype TProps = {\r\n  value: Dayjs\r\n  closeDrawer: () => void\r\n  onSubmit: (newMonth: Dayjs) => void\r\n}\r\n\r\ntype TMonthItem = {\r\n  selected: boolean\r\n}\r\n\r\nconst StyledMonthPanel = styled.section`\r\n  padding: 0 16px;\r\n  background:  #FAFAFA;\r\n`\r\n\r\nconst Year = styled.section`\r\n  > p {\r\n    padding: 16px 0;\r\n    text-align: center;\r\n    color: ${props => props.theme.$subText};\r\n  }\r\n`\r\n\r\nconst MonthList = styled.ul`\r\n  padding-bottom: 16px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  list-style: none;\r\n`\r\n\r\nconst MonthItem = styled.li<TMonthItem>`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 6px;\r\n  border: 4px solid #FAFAFA;\r\n  width: 25%;\r\n  font-size: 1.1em;\r\n  padding: 16px;\r\n  background: ${props => props.selected ? props.theme.$success : 'white'};\r\n  color: ${props => props.selected ? 'white' : props.theme.$normalText}\r\n`\r\n\r\nexport const getPrevMonths = () => {\r\n  const DURATION = 5\r\n\r\n  return [...Array(DURATION)].map((_, index) => dayjs().subtract(index, 'month'))\r\n}\r\n\r\nconst MonthPanel: React.FC<TProps> = (props) => {\r\n  const {closeDrawer, value, onSubmit} = props\r\n\r\n  const thisYear = dayjs()\r\n  const prevYear = dayjs().subtract(1, 'year')\r\n\r\n  const prevMonths = getPrevMonths()\r\n  const prevYearMonths = prevMonths.filter(m => m.isSame(prevYear, 'year'))\r\n  const thisYearMonths = prevMonths.filter(m => m.isSame(thisYear, 'year'))\r\n\r\n  const submit = (newMonth: Dayjs) => {\r\n    onSubmit(newMonth)\r\n    closeDrawer()\r\n  }\r\n\r\n  return (\r\n    <StyledMonthPanel>\r\n      {/*今年的月份*/}\r\n      {\r\n        thisYearMonths &&\r\n        <Year>\r\n          <p>{thisYear.get('year')}</p>\r\n          <MonthList>\r\n            {thisYearMonths.map(m =>\r\n              <MonthItem selected={m.isSame(value, 'date')}\r\n                         key={m.get('month')}\r\n                         onClick={() => submit(m)}>\r\n                {m.get('month') + 1}月\r\n              </MonthItem>\r\n            )}\r\n          </MonthList>\r\n        </Year>\r\n      }\r\n\r\n      {/*去年的月份*/}\r\n      {\r\n        prevYearMonths.length !== 0 &&\r\n        <Year>\r\n          <p>{prevYear.get('year')}</p>\r\n          <MonthList>\r\n            {prevYearMonths.map(m =>\r\n              <MonthItem selected={m.isSame(value, 'date')}\r\n                         key={m.get('month')}\r\n                         onClick={() => submit(m)}>\r\n                {m.get('month') + 1}月\r\n              </MonthItem>\r\n            )}\r\n          </MonthList>\r\n        </Year>\r\n      }\r\n    </StyledMonthPanel>\r\n  )\r\n}\r\n\r\nexport default MonthPanel\r\n","import * as React from 'react'\r\nimport Icon from './Icon'\r\nimport styled from 'styled-components'\r\nimport {Link, useLocation} from 'react-router-dom'\r\nimport theme from '../theme'\r\n\r\ntype TMenuItem = {\r\n  selected: boolean\r\n}\r\n\r\nconst StyledMenu = styled.div`\r\n  padding: 12px 0;\r\n  background: white;\r\n  box-shadow: 0px -2px 12px 0px rgba(192,196,204,.4);\r\n  z-index: 2;\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n  .selected {\r\n    color: ${props => props.theme.$success}\r\n  }\r\n`\r\n\r\nconst MenuItem = styled(Link)<TMenuItem>`\r\n  flex-grow: 1;\r\n  width: 50%;\r\n  float: left;\r\n  color: ${props => props.theme.$normalText};\r\n  font-size: ${props => props.theme.$normalTextSize};\r\n  text-align: center;\r\n  > div {\r\n    margin-top: 4px;\r\n    color: ${props => props.selected ? props.theme.$success : props.theme.$normalText};\r\n    text-align: center;\r\n  }\r\n`\r\n\r\nconst Menu: React.FC = () => {\r\n  const {pathname} = useLocation()\r\n\r\n  return (\r\n    <StyledMenu className=\"clearfix\">\r\n      <MenuItem to=\"/\" selected={pathname === '/'}>\r\n        {\r\n          pathname === '/' ?\r\n            <Icon name=\"solid-order\" size={24} color={theme.$success}/> :\r\n            <Icon name=\"order\" size={24}/>\r\n        }\r\n        <div>明细</div>\r\n      </MenuItem>\r\n      <MenuItem to=\"/analysis\" selected={pathname === '/analysis'}>\r\n        {\r\n          pathname === '/analysis' ?\r\n            <Icon name=\"solid-chart\" size={24} color={theme.$success}/> :\r\n            <Icon name=\"chart\" size={24}/>\r\n        }\r\n        <div>统计</div>\r\n      </MenuItem>\r\n    </StyledMenu>\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import * as React from 'react'\r\nimport styled from 'styled-components'\r\nimport Menu from './Menu'\r\n\r\nconst StyledLayout = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst Header = styled.header`\r\n  padding: 25px 14px 16px;\r\n  background: ${props => props.theme.$success};\r\n  color: ${props => props.theme.$white};\r\n  border-bottom: 1px solid rgba(18,18,18,.1); \r\n  box-shadow: 0 1px 3px rgba(18,18,18,.1); \r\n  .title {\r\n    text-align: center;\r\n    font-size: ${props => props.theme.$largeTextSize};\r\n  }\r\n`\r\n\r\nconst Layout: React.FC = (props) => {\r\n  return (\r\n    <StyledLayout>\r\n      <Header>\r\n        <p className=\"title\">小熊记账本</p>\r\n      </Header>\r\n\r\n      {props.children}\r\n\r\n      <Menu/>\r\n    </StyledLayout>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import * as React from 'react'\r\nimport {useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport Icon from '../components/Icon'\r\nimport Divider from '../components/Dividier'\r\nimport MonthRecord from '../components/MonthRecord'\r\nimport useRecordList, {TRawRecord, TRecordType} from '../hooks/useRecordList'\r\nimport dayjs, {Dayjs} from 'dayjs'\r\nimport {MONTH} from '../lib/date'\r\nimport Sticker from '../components/Sticker'\r\nimport theme from '../theme'\r\nimport Drawer from '../components/Drawer'\r\nimport Money from '../components/Money'\r\nimport CategoryFilter from '../components/CategoryFilter'\r\nimport {ALL_CATEGORIES, ALL_TYPE} from '../lib/category'\r\nimport MonthPanel from '../components/MonthPanel'\r\nimport Layout from '../components/Layout'\r\n\r\nconst FilterWrapper = styled.section`\r\n  padding: 0 12px;\r\n  background: ${props => props.theme.$success};\r\n  color: ${props => props.theme.$white};\r\n`\r\n\r\nconst TypeButton = styled.button`\r\n  margin-top: 26px;\r\n  padding: 8px 16px;\r\n  color: ${props => props.theme.$white};\r\n  background: #4395D6;\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 4px;\r\n`\r\n\r\nconst MonthButton = styled.button`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  padding: 8px 16px;\r\n  color: ${props => props.theme.$white};\r\n  border: none;\r\n  outline: none;\r\n  background: none;\r\n`\r\n\r\nconst MonthFilterSection = styled.section`\r\n  padding-top: 8px;\r\n  font-weight: 300;\r\n`\r\n\r\nconst RecordList = styled.ul`\r\n  padding: 8px;\r\n  flex-grow: 1;\r\n  overflow: auto;\r\n`\r\n\r\nconst Empty = styled.div`\r\n  padding-top: 24px;\r\n  height: 100%;\r\n  text-align: center;\r\n  color: ${props => props.theme.$subText}\r\n`\r\n\r\nconst Summary: React.FC = () => {\r\n  const [showMonth, toggleMonth] = useState(false)\r\n  const [showFilter, toggleFilter] = useState(false)\r\n  const [showMoney, toggleMoney] = useState(false)\r\n\r\n  const [month, setMonth] = useState(dayjs())\r\n  const [filterId, setFilterId] = useState(ALL_TYPE)\r\n  const [filterType, setFilterType] = useState<TRecordType>('expense')\r\n  const {fetchData, addRawRecord, filterRecordList} = useRecordList()\r\n\r\n  const recordList = filterRecordList(filterId, month, filterType)\r\n  const [firstMonth] = recordList\r\n\r\n  const filter = ALL_CATEGORIES.find(c => c.id === filterId)\r\n\r\n  const closeMoney = () => {\r\n    fetchData()\r\n    toggleMoney(false)\r\n  }\r\n\r\n  const onAddRecord = (newRawRecord: TRawRecord) => {\r\n    addRawRecord(newRawRecord)\r\n\r\n    alert('已添加该记录')\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <FilterWrapper>\r\n        <section>\r\n          <TypeButton onClick={() => toggleFilter(true)}>\r\n            <span>{filter ? filter.name : '全部类型'}</span>\r\n            <Divider color=\"#68C895\"/>\r\n            <Icon color=\"#edf5ed\" name=\"application\"/>\r\n          </TypeButton>\r\n        </section>\r\n\r\n        <MonthFilterSection>\r\n          <MonthButton onClick={() => toggleMonth(true)}>\r\n            <span style={{marginRight: 4}}>{month.format(MONTH)}</span>\r\n            <Icon color=\"#A0D8BB\" name=\"drop-down\"/>\r\n          </MonthButton>\r\n          <span style={{marginRight: 12}}>\r\n            总支出￥{firstMonth ? firstMonth.expenseTotal.toFixed(2) : '0.00'}\r\n          </span>\r\n          <span>\r\n            总收入￥{firstMonth ? firstMonth.incomeTotal.toFixed(2) : '0.00'}\r\n          </span>\r\n        </MonthFilterSection>\r\n      </FilterWrapper>\r\n\r\n      {\r\n        recordList.length !== 0 ?\r\n          <RecordList>\r\n            {\r\n              recordList.map(monthRecord => (\r\n                <MonthRecord key={monthRecord.month} monthRecord={monthRecord}/>\r\n              ))\r\n            }\r\n          </RecordList>\r\n          :\r\n          <Empty>暂无数据</Empty>\r\n      }\r\n\r\n      {/*记账*/}\r\n      <Sticker onClick={() => toggleMoney(true)}>\r\n        <Icon name=\"survey\" size={22} color={theme.$success}/>\r\n      </Sticker>\r\n\r\n      {/*选择月份*/}\r\n      {\r\n        showMonth &&\r\n        <Drawer title=\"请选择月份\" closeDrawer={() => toggleMonth(false)}>\r\n          <MonthPanel value={month}\r\n                      closeDrawer={() => toggleMonth(false)}\r\n                      onSubmit={(newMonth: Dayjs) => setMonth(newMonth)}/>\r\n        </Drawer>\r\n      }\r\n\r\n      {/*过滤 Category*/}\r\n      {\r\n        showFilter &&\r\n        <Drawer closeDrawer={() => toggleFilter(false)}>\r\n          <CategoryFilter value={filterId}\r\n                          recordType={filterType}\r\n                          closeDrawer={() => toggleFilter(false)}\r\n                          onSubmit={(id, type) => {\r\n                            setFilterId(id)\r\n                            setFilterType(type)\r\n                          }}/>\r\n        </Drawer>\r\n      }\r\n\r\n      {/*记账*/}\r\n      {\r\n        showMoney &&\r\n        <Drawer closeDrawer={closeMoney}>\r\n          <Money closeDrawer={closeMoney}\r\n                 onSubmit={onAddRecord}/>\r\n        </Drawer>\r\n      }\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Summary\r\n","import * as React from 'react'\r\nimport Category from './Category'\r\nimport dayjs from 'dayjs'\r\nimport {FULL_TIME} from '../lib/date'\r\nimport {TRawRecord} from '../hooks/useRecordList'\r\nimport {DEFAULT_EXPENSE_CATEGORIES} from '../lib/category'\r\nimport styled from 'styled-components'\r\nimport Divider from './Dividier'\r\nimport Icon from './Icon'\r\n\r\ntype TProps = {\r\n  rawRecord: TRawRecord\r\n  onDelete: (id: string) => void\r\n  onEdit: () => void\r\n}\r\n\r\nconst StyledRecordDetails = styled.div`\r\n  padding: 16px;\r\n  background: white;\r\n  border-radius: 8px;\r\n  text-align: center;\r\n  h3 {\r\n    margin: 16px 0;\r\n    font-size: 2.4em;\r\n    font-weight: normal;\r\n    letter-spacing: 1px;\r\n  }\r\n`\r\n\r\nconst CategorySection = styled.section`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 12px;\r\n`\r\n\r\nconst DetailsTable = styled.table`\r\n  margin-bottom: 16px;\r\n  text-align: left;\r\n  border-spacing: 8px;\r\n  td:first-child {\r\n    color: ${props => props.theme.$subText};\r\n    padding-right: 12px;\r\n  }\r\n`\r\n\r\nconst DeleteButton = styled.button`\r\n  color: ${props => props.theme.$danger};\r\n  svg {\r\n    fill: ${props => props.theme.$danger}\r\n  }\r\n`\r\n\r\nconst ActionSection = styled.section`\r\n  display: flex;\r\n  padding: 16px 0 0;\r\n  border-top: 1px solid #eee;\r\n  > button {\r\n    flex-grow: 1;\r\n    background: none;\r\n    border: none;\r\n  }\r\n`\r\n\r\nconst RecordDetails: React.FC<TProps> = (props) => {\r\n  const {rawRecord, onDelete, onEdit} = props\r\n  const {id, amount, type, date, note, categoryId} = rawRecord\r\n\r\n  const category = DEFAULT_EXPENSE_CATEGORIES.find(c => c.id === categoryId)\r\n  if (!category) return <div>页面出错</div>\r\n\r\n  const deleteRecord = () => {\r\n    if (!window.confirm('删除后无法恢复，是否删除？')) return\r\n\r\n    onDelete(id)\r\n  }\r\n\r\n  return (\r\n    <StyledRecordDetails>\r\n      <CategorySection>\r\n        <Category category={category} recordType={type} size={14}/>\r\n        <span style={{marginLeft: 8}}>{category.name}</span>\r\n      </CategorySection>\r\n      <h3>\r\n        {type === 'expense' ? '-' : '+'}\r\n        {amount}\r\n      </h3>\r\n      <DetailsTable>\r\n        <tbody>\r\n        <tr>\r\n          <td>记录时间</td>\r\n          <td>{dayjs(date).format(FULL_TIME)}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>备注</td>\r\n          <td>{note}</td>\r\n        </tr>\r\n        </tbody>\r\n      </DetailsTable>\r\n      <ActionSection>\r\n        <DeleteButton onClick={deleteRecord}>\r\n          <Icon name=\"trash\"/>\r\n          <span style={{marginLeft: 8}}>删除</span>\r\n        </DeleteButton>\r\n        <Divider gap={0}/>\r\n        <button onClick={onEdit}>\r\n          <Icon name=\"edit\"/>\r\n          <span style={{marginLeft: 8}}>编辑</span>\r\n        </button>\r\n      </ActionSection>\r\n    </StyledRecordDetails>\r\n  )\r\n}\r\n\r\nexport default RecordDetails\r\n","import * as React from 'react'\r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport Icon from '../components/Icon'\r\nimport useRecordList, {TRawRecord} from '../hooks/useRecordList'\r\nimport styled from 'styled-components'\r\nimport RecordDetails from '../components/RecordDetails'\r\nimport Drawer from '../components/Drawer'\r\nimport Money from '../components/Money'\r\nimport {useState} from 'react'\r\n\r\ntype TParams = {\r\n  id: string\r\n}\r\n\r\nconst Header = styled.header`\r\n  padding: 24px 12px;\r\n`\r\n\r\nconst Main = styled.section`\r\n  padding: 0 12px;\r\n`\r\n\r\nconst Details: React.FC = () => {\r\n  const {goBack, push} = useHistory()\r\n  const {id} = useParams<TParams>()\r\n\r\n  const {rawRecordList, deleteRecord, editRecord} = useRecordList()\r\n\r\n  const [showMoney, toggleMoney] = useState(false)\r\n\r\n  // 是否找到该 record\r\n  const rawRecord = rawRecordList.find(r => r.id === id)\r\n  if (!rawRecord) return <div>页面出错</div>\r\n\r\n  const onDelete = (id: string) => {\r\n    deleteRecord(id)\r\n\r\n    push('/')\r\n\r\n    alert('删除成功')\r\n  }\r\n\r\n  const onEdit = (rawRecord: TRawRecord) => {\r\n    editRecord(rawRecord)\r\n\r\n    alert('修改成功')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header>\r\n        <Icon name=\"left\" onClick={goBack} size={24}/>\r\n      </Header>\r\n\r\n      <Main>\r\n        <RecordDetails onDelete={onDelete}\r\n                       onEdit={() => toggleMoney(true)}\r\n                       rawRecord={rawRecord}/>\r\n      </Main>\r\n\r\n      {/*记账*/}\r\n      {\r\n        showMoney &&\r\n        <Drawer closeDrawer={() => toggleMoney(false)}>\r\n          <Money closeDrawer={() => toggleMoney(false)}\r\n                 value={rawRecord}\r\n                 onSubmit={onEdit}/>\r\n        </Drawer>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Details\r\n","import * as React from 'react'\r\nimport Divider from '../../components/Dividier'\r\nimport theme from '../../theme'\r\nimport Icon from '../../components/Icon'\r\nimport styled from 'styled-components'\r\nimport {TMonthRecord} from '../../hooks/useRecordList'\r\nimport {Dayjs} from 'dayjs'\r\nimport {MONTH} from '../../lib/date'\r\n\r\ntype TProps = {\r\n  showMonth: () => void\r\n  month: Dayjs\r\n  monthRecord?: TMonthRecord\r\n}\r\n\r\nconst Section = styled.section`\r\n  padding: 32px 0;\r\n  text-align: center;\r\n  background: white;\r\n`\r\n\r\nconst MonthFilter = styled.button`\r\n  padding: 8px 16px;\r\n  background: #F7F7F7;\r\n  border-radius: 4px;\r\n  color: ${props => props.theme.$normalText}\r\n`\r\n\r\nconst ExpenseTitle = styled.p`\r\n  margin: 20px 0 4px;\r\n  color: ${props => props.theme.$success};\r\n`\r\n\r\nconst Expense = styled.p`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  justify-content: center;\r\n  span {\r\n    font-weight: 500;\r\n    font-size: 1.4em;\r\n    color: ${props => props.theme.$success};\r\n    &.money {\r\n      font-size: 2.2em;\r\n    }\r\n  }\r\n`\r\n\r\nconst Income = styled.p`\r\n  color: ${props => props.theme.$subText}\r\n`\r\n\r\nconst MonthFilterSection: React.FC<TProps> = (props) => {\r\n  const {showMonth, month, monthRecord} = props\r\n\r\n  return (\r\n    <Section>\r\n      <MonthFilter onClick={showMonth}>\r\n        <span>{month.format(MONTH)}</span>\r\n        <Divider gap={8} color={theme.$placeholder}/>\r\n        <Icon color={theme.$normalText} name=\"drop-down\"/>\r\n      </MonthFilter>\r\n\r\n      <ExpenseTitle>共支出</ExpenseTitle>\r\n\r\n      <Expense>\r\n        <span>￥</span>\r\n        <span className=\"money\">\r\n          {monthRecord ? monthRecord.expenseTotal.toFixed(2) : '0.00'}\r\n        </span>\r\n      </Expense>\r\n\r\n      <Income>\r\n        共收入￥{monthRecord ? monthRecord.incomeTotal.toFixed(2) : '0.00'}\r\n      </Income>\r\n    </Section>\r\n  )\r\n}\r\n\r\nexport default MonthFilterSection\r\n","import * as React from 'react'\r\nimport theme from '../theme'\r\nimport styled from 'styled-components'\r\n\r\ntype TProps = {\r\n  value: number\r\n  height?: number\r\n  width?: number\r\n  color?: string\r\n}\r\n\r\ntype TBar = {\r\n  height: number\r\n  width: number\r\n}\r\n\r\ntype TProgress = {\r\n  color: string\r\n  progress: number\r\n}\r\n\r\nconst StyledProgressBar = styled.span`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst Text = styled.span`\r\n  margin-right: 4px;\r\n  font-size: ${props => props.theme.$subText};\r\n  color: ${props => props.theme.$subText};\r\n`\r\n\r\nconst Bar = styled.div<TBar>`\r\n  position: relative;\r\n  height: ${props => props.height + 'px'};\r\n  width: ${props => props.width + 'px'};\r\n  background: #E5E5E5;\r\n  border-radius: 16px;\r\n`\r\n\r\nconst Progress = styled.div<TProgress>`\r\n  position: absolute;\r\n  left: 0;\r\n  height: 100%;\r\n  width: ${props => props.progress + '%'};\r\n  border-radius: 16px;\r\n  background: ${props => props.color};\r\n`\r\n\r\nconst ProgressBar: React.FC<TProps> = (props) => {\r\n  const {value, width, height, color} = props\r\n\r\n  return (\r\n    <StyledProgressBar>\r\n      <Text>{(value * 100).toFixed(2)}%</Text>\r\n      <Bar width={width!} height={height!}>\r\n        <Progress progress={value * 100} color={color!}/>\r\n      </Bar>\r\n    </StyledProgressBar>\r\n  )\r\n}\r\n\r\nProgressBar.defaultProps = {\r\n  value: 0.00,\r\n  color: theme.$success,\r\n  width: 200,\r\n  height: 8\r\n}\r\n\r\nexport default ProgressBar\r\n","import * as React from 'react'\r\nimport {useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport Button from '../../components/Button'\r\nimport {parseMonthRecord, TMonthRecord, TRawRecord, TRecordType} from '../../hooks/useRecordList'\r\nimport {ALL_CATEGORIES} from '../../lib/category'\r\nimport Category, {TCategory} from '../../components/Category'\r\nimport ProgressBar from '../../components/ProgressBar'\r\nimport theme from '../../theme'\r\n\r\ntype TProps = {\r\n  monthRecord?: TMonthRecord\r\n}\r\n\r\ntype TClass = {\r\n  amount: number\r\n  category: TCategory\r\n  ratio: number\r\n}\r\n\r\nconst Section = styled.section`\r\n  padding: 24px 0;\r\n  background: white;\r\n`\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  > span {\r\n    font-size: ${props => props.theme.$mainTextSize};\r\n  }\r\n`\r\n\r\nconst ClassList = styled.ul`\r\n  margin-top: 32px;\r\n  list-style: none;\r\n`\r\n\r\nconst ClassItem = styled.li`\r\n  display: flex;\r\n  margin-bottom: 24px;\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n  \r\n  > span {\r\n    display: inline-flex;\r\n    align-items: center;\r\n    &.ratio {\r\n      padding-right: 16px;\r\n      justify-content: flex-end;\r\n      text-align: right;\r\n      flex-grow: 1;\r\n    }\r\n  }\r\n`\r\n\r\nconst Empty = styled.div`\r\n  margin-top: 32px;\r\n  text-align: center;\r\n  color: ${props => props.theme.$subText};\r\n`\r\n\r\nconst classify = (rawRecordList: TRawRecord[]) => {\r\n  let classified: { [key: string]: TClass } = {}\r\n  let total = 0\r\n\r\n  rawRecordList.forEach(r => {\r\n    const {categoryId} = r\r\n\r\n    if (!(categoryId in classified)) {\r\n      classified[categoryId] = {\r\n        amount: 0,\r\n        category: ALL_CATEGORIES.find(c => c.id === categoryId)!,\r\n        ratio: 0.0\r\n      }\r\n    }\r\n\r\n    total += r.amount\r\n\r\n    classified[categoryId].amount += r.amount\r\n    classified[categoryId].ratio = classified[categoryId].amount / total\r\n  })\r\n\r\n  // 计算 ratio\r\n  Object.values(classified).forEach(c => c.ratio = c.amount / total)\r\n\r\n  return Object.values(classified).sort((a, b) => b.ratio - a.ratio)\r\n}\r\n\r\nconst CategorySection: React.FC<TProps> = (props) => {\r\n  const {monthRecord} = props\r\n\r\n  const [type, setType] = useState<TRecordType>('expense')\r\n\r\n  const rawRecordList = monthRecord ? parseMonthRecord(monthRecord).filter(r => r.type === type) : []\r\n  const classified = classify(rawRecordList)\r\n\r\n  return (\r\n    <Section>\r\n      <Header>\r\n        <span>收支构成</span>\r\n\r\n        <span>\r\n          <Button recordType={type === 'expense' ? 'success' : 'none'}\r\n                  size=\"small\"\r\n                  onClick={() => setType('expense')}>\r\n            支出\r\n          </Button>\r\n          <Button recordType={type === 'income' ? 'warning' : 'none'}\r\n                  size=\"small\"\r\n                  onClick={() => setType('income')}>\r\n            收入\r\n          </Button>\r\n        </span>\r\n      </Header>\r\n\r\n      {\r\n        classified.length !== 0 ?\r\n          <ClassList>\r\n            {classified.map(({category, amount, ratio}) => (\r\n              <ClassItem key={category.id}>\r\n                <span className=\"category\">\r\n                  <Category category={category} recordType={type} size={14}/>\r\n                  <span style={{marginLeft: 8}}>{category.name}</span>\r\n                </span>\r\n                <span className=\"ratio\">\r\n                  <ProgressBar color={type === 'expense' ? theme.$success : theme.$warning}\r\n                               value={ratio}\r\n                               width={110}\r\n                               height={6}/>\r\n                </span>\r\n                <span className=\"amount\">\r\n                  ￥{amount.toFixed(2)}\r\n                </span>\r\n              </ClassItem>\r\n            ))}\r\n          </ClassList>\r\n          :\r\n          <Empty>暂无数据</Empty>\r\n      }\r\n    </Section>\r\n  )\r\n}\r\n\r\nexport default CategorySection\r\n","import theme from '../theme'\r\nimport {TRecordType} from '../hooks/useRecordList'\r\n\r\nexport const barChart = (xData: any[], yData: any[], type: TRecordType, unit: string) => {\r\n  const color = type === 'expense' ? theme.$success : theme.$warning\r\n  const name = type === 'expense' ? '支出' : '收入'\r\n\r\n  return {\r\n    tooltip: {\r\n      show: true,\r\n      trigger: 'item',\r\n      axisPointer: {\r\n        type: 'shadow',\r\n        axis: 'auto',\r\n      },\r\n      padding: 5,\r\n      textStyle: {\r\n        color: '#eee'\r\n      },\r\n    },\r\n    xAxis: {\r\n      axisLabel: {\r\n        formatter: `{value}\\n${unit}`,\r\n        textStyle: {\r\n          color: theme.$subText\r\n        }\r\n      },\r\n      data: xData\r\n    },\r\n    yAxis: {\r\n      show: false\r\n    },\r\n    series: [\r\n      {\r\n        type: 'bar',\r\n        name,\r\n        data: yData,\r\n        label: {\r\n          show: true,\r\n          position: 'top',\r\n          color,\r\n          formatter: (data: any) => data.value === 0 ? '' : `￥${data.value.toFixed(2)}`\r\n        },\r\n        itemStyle: {\r\n          color,\r\n        },\r\n        barMinHeight: 4\r\n      }\r\n    ]\r\n  }\r\n}\r\n","import * as React from 'react'\r\nimport {useState} from 'react'\r\nimport ReactEcharts from 'echarts-for-react'\r\nimport styled from 'styled-components'\r\nimport Button from '../../components/Button'\r\nimport {parseMonthRecord, TMonthRecord, TRawRecord, TRecordType} from '../../hooks/useRecordList'\r\nimport dayjs, {Dayjs} from 'dayjs'\r\nimport {getDaysInMonth} from '../../lib/date'\r\nimport {barChart} from '../../lib/chart'\r\n\r\ntype TProps = {\r\n  month: Dayjs\r\n  monthRecord?: TMonthRecord\r\n}\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  > span {\r\n    font-size: ${props => props.theme.$mainTextSize};\r\n  }\r\n`\r\n\r\nconst Main = styled.div`\r\n  margin: 0 -24px;\r\n`\r\n\r\nconst getYData = (days: number[], rawRecordList: TRawRecord[]) => {\r\n  return days.map(d => {\r\n    const record = rawRecordList.find(r => dayjs(r.date).get('date') === d)\r\n    return record ? record.amount : 0.00\r\n  })\r\n}\r\n\r\nconst DayAnalysis: React.FC<TProps> = (props) => {\r\n  const {month, monthRecord} = props\r\n\r\n  const [type, setType] = useState<TRecordType>('expense')\r\n\r\n  const rawRecordList = monthRecord ? parseMonthRecord(monthRecord).filter(r => r.type === type) : []\r\n\r\n  // 每日对比\r\n  const xDayData = getDaysInMonth(month)\r\n  const yDayData = getYData(xDayData, rawRecordList)\r\n  const dayChartOptions = barChart(xDayData, yDayData, type, '号')\r\n\r\n  return (\r\n    <section>\r\n      <Header>\r\n        <span>每日对比</span>\r\n\r\n        <span>\r\n          <Button recordType={type === 'expense' ? 'success' : 'none'}\r\n                  size=\"small\"\r\n                  onClick={() => setType('expense')}>\r\n            支出\r\n          </Button>\r\n          <Button recordType={type === 'income' ? 'warning' : 'none'}\r\n                  size=\"small\"\r\n                  onClick={() => setType('income')}>\r\n            收入\r\n          </Button>\r\n        </span>\r\n      </Header>\r\n\r\n      <Main>\r\n        <ReactEcharts option={dayChartOptions}/>\r\n      </Main>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default DayAnalysis\r\n","import * as React from 'react'\r\nimport {parseMonthRecord, TMonthRecord, TRecordType} from '../../hooks/useRecordList'\r\nimport {getPrevMonths} from '../../components/MonthPanel'\r\nimport {Dayjs} from 'dayjs'\r\nimport {MONTH} from '../../lib/date'\r\nimport Button from '../../components/Button'\r\nimport {useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport ReactEcharts from 'echarts-for-react'\r\nimport {barChart} from '../../lib/chart'\r\n\r\ntype TProps = {\r\n  getMonthRecord: (month: string) => TMonthRecord | undefined\r\n}\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  > span {\r\n    font-size: ${props => props.theme.$mainTextSize};\r\n  }\r\n`\r\n\r\nconst Main = styled.div`\r\n  margin: 0 -24px;\r\n`\r\n\r\nconst getYData = (months: Dayjs[], getMonthRecord: Function) => {\r\n  return months.map(m => {\r\n    const monthRecord = getMonthRecord(m.format(MONTH))\r\n    // 没有就为 0\r\n    if (!monthRecord) return 0\r\n\r\n    // 计算总数\r\n    let total = 0\r\n    parseMonthRecord(monthRecord).forEach(r => total += r.amount)\r\n\r\n    return total\r\n  })\r\n}\r\n\r\n\r\nconst MonthAnalysis: React.FC<TProps> = (props) => {\r\n  const {getMonthRecord} = props\r\n\r\n  const [type, setType] = useState<TRecordType>('expense')\r\n\r\n  // 每月对比\r\n  const months = getPrevMonths()\r\n  const xData = months.map(m => m.get('month') + 1)\r\n  const yData = getYData(months, getMonthRecord)\r\n\r\n  const monthChartOptions = barChart(xData, yData, type, '月')\r\n\r\n  return (\r\n    <div>\r\n      <Header>\r\n        <span>月度对比</span>\r\n\r\n        <span>\r\n          <Button recordType={type === 'expense' ? 'success' : 'none'}\r\n                  size=\"small\"\r\n                  onClick={() => setType('expense')}>\r\n            支出\r\n          </Button>\r\n          <Button recordType={type === 'income' ? 'warning' : 'none'}\r\n                  size=\"small\"\r\n                  onClick={() => setType('income')}>\r\n            收入\r\n          </Button>\r\n        </span>\r\n      </Header>\r\n\r\n      <Main>\r\n        <ReactEcharts option={monthChartOptions}/>\r\n      </Main>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MonthAnalysis\r\n","import * as React from 'react'\r\nimport Layout from '../../components/Layout'\r\nimport styled from 'styled-components'\r\nimport MonthFilterSection from './MonthFilterSection'\r\nimport Drawer from '../../components/Drawer'\r\nimport MonthPanel from '../../components/MonthPanel'\r\nimport dayjs, {Dayjs} from 'dayjs'\r\nimport {useState} from 'react'\r\nimport useRecordList from '../../hooks/useRecordList'\r\nimport {MONTH} from '../../lib/date'\r\nimport CategorySection from './CategorySection'\r\nimport Divider from '../../components/Dividier'\r\nimport DayAnalysis from './DayAnalysis'\r\nimport MonthAnalysis from './MonthAnalysis'\r\n\r\nconst StyledAnalysis = styled.div`\r\n  flex-grow: 1;\r\n  overflow: auto;\r\n`\r\n\r\nconst Main = styled.section`\r\n  margin-top: 8px;\r\n  background: white;\r\n  padding: 24px;\r\n`\r\n\r\nconst Analysis: React.FC = () => {\r\n  const [showMonth, toggleMonth] = useState(false)\r\n  const [month, setMonth] = useState(dayjs())\r\n\r\n  const {getMonthRecord} = useRecordList()\r\n\r\n  // 选中的 month record\r\n  const selectedRecordList = getMonthRecord(month.format(MONTH))\r\n\r\n  return (\r\n    <Layout>\r\n      <StyledAnalysis>\r\n        <MonthFilterSection monthRecord={selectedRecordList}\r\n                            month={month}\r\n                            showMonth={() => toggleMonth(true)}/>\r\n        <Main>\r\n          <CategorySection monthRecord={selectedRecordList}/>\r\n\r\n          <Divider direction=\"horizontal\" gap={24}/>\r\n\r\n          <DayAnalysis month={month}\r\n                       monthRecord={selectedRecordList}\r\n                       />\r\n\r\n          <Divider direction=\"horizontal\" gap={24}/>\r\n\r\n          <MonthAnalysis getMonthRecord={getMonthRecord}/>\r\n        </Main>\r\n      </StyledAnalysis>\r\n\r\n\r\n      {/*选择月份*/}\r\n      {\r\n        showMonth &&\r\n        <Drawer title=\"请选择月份\" closeDrawer={() => toggleMonth(false)}>\r\n          <MonthPanel value={month}\r\n                      closeDrawer={() => toggleMonth(false)}\r\n                      onSubmit={(newMonth: Dayjs) => setMonth(newMonth)}/>\r\n        </Drawer>\r\n      }\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Analysis\r\n","import React, {useEffect, useState} from 'react'\r\nimport styled, {ThemeProvider} from 'styled-components'\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport Summary from './pages/Summary'\r\nimport Details from './pages/Details'\r\nimport theme from './theme'\r\nimport Analysis from './pages/Analysis/Analysis'\r\n\r\ntype TStyledApp = {\r\n  height: number\r\n}\r\n\r\nconst StyledApp = styled.div<TStyledApp>`\r\n  position: relative;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n  background: #EDEDED;\r\n  height: ${props => props.height + 'px'}\r\n`\r\n\r\nconst App: React.FC = () => {\r\n  const [height, setHeight] = useState(window.innerHeight)\r\n\r\n  const onResize = () => {\r\n    setHeight(window.innerHeight * 0.01)\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', onResize)\r\n    return window.removeEventListener('resize', onResize)\r\n  })\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Router>\r\n        <StyledApp height={height}>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Summary/>\r\n            </Route>\r\n            <Route path=\"/analysis\">\r\n              <Analysis/>\r\n            </Route>\r\n            <Route path=\"/record/:id\">\r\n              <Details/>\r\n            </Route>\r\n          </Switch>\r\n        </StyledApp>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './assets/styles/global.scss'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}